{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.tsx to start working on your app!\"\n    }), _jsx(Text, {\n      children: \" Hola Patricio!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","App","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["D:/Projectos/Cacao/cacaotech-expo/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.tsx to start working on your app!</Text>\n      <Text> Hola Patricio!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n// import * as tf from '@tensorflow/tfjs';\n// import '@tensorflow/tfjs-react-native';\n// import { StatusBar } from 'expo-status-bar';\n// import React, { useState, useEffect }  from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\n\n// export class App extends React.Component {\n//   constructor(props: any) {\n//     super(props);\n//     this.state = {\n//       isTfReady: false,\n//     };\n//   }\n\n//   async componentDidMount() {\n//     // Wait for tf to be ready.\n//     await tf.ready();\n//     // Signal to the app that tensorflow.js can now be used.\n//     this.setState({\n//       isTfReady: true,\n//     });\n//   }\n\n  \n//   // render() {\n//   //   //\n//   // }\n//   return (\n//     <View style={styles.container}>\n//       <Text>Open up App.tsx to start working on your app!</Text>\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;EAC5B,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,IAAD;MAAA;IAAA,EAFF,EAGE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EAHF;EAAA,EADF;AAOD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}